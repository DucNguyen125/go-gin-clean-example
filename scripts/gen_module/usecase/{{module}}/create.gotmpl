package {{module}}

import (
	"context"

	"base-gin-golang/domain/entity"
	"base-gin-golang/pkg/logger"
)

type Create{{Module}}InputBody struct {
	OtherField string `json:"otherField" validate:"required"`
}

type Create{{Module}}Input struct {
	Body Create{{Module}}InputBody
}

type Create{{Module}}Output struct {
	Body *entity.{{Module}}
}

func (u *{{module}}UseCase) Create(
	ctx context.Context,
	input *Create{{Module}}Input,
) (*Create{{Module}}Output, error) {
	data := &entity.{{Module}}{}
	err := u.dataService.Copy(data, &input.Body)
	if err != nil {
		logger.LogHandler(ctx, err)
		return nil, err
	}
	new{{Module}}, err := u.{{module}}Repository.Create(ctx, data)
	if err != nil {
		logger.LogHandler(ctx, err)
		return nil, err
	}
	return &Create{{Module}}Output{Body: new{{Module}}}, nil
}
