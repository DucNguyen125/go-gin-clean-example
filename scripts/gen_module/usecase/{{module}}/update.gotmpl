package {{module}}

import (
	"context"

	"base-gin-golang/domain/entity"
	"base-gin-golang/pkg/logger"

	"github.com/jinzhu/copier"
)

type Update{{Module}}InputBody struct {
	OtherField string `json:"otherField" validate:"required"`
}

type Update{{Module}}Input struct {
	ID   int64 `path:"id"`
	Body Update{{Module}}InputBody
}

type Update{{Module}}Output struct {
	Body *entity.{{Module}}
}

func (u *{{module}}UseCase) Update(
	ctx context.Context,
	input *Update{{Module}}Input,
) (*Update{{Module}}Output, error) {
	data := &entity.{{Module}}{}
	err := copier.Copy(data, &input.Body)
	if err != nil {
		logger.LogHandler(ctx, err)
		return nil, err
	}
	new{{Module}}, err := u.{{module}}Repository.Update(ctx, input.ID, data)
	if err != nil {
		logger.LogHandler(ctx, err)
		return nil, err
	}
	return &Update{{Module}}Output{Body: new{{Module}}}, nil
}
