package {{module}}

import (
	"context"

	"base-gin-golang/pkg/logger"
)

type Delete{{Module}}Input struct {
	ID int64 `path:"id"`
}

type Delete{{Module}}OutputBody struct {
	RowsAffected int64 `json:"rowsAffected"`
}

type Delete{{Module}}Output struct {
	Body Delete{{Module}}OutputBody
}

func (u *{{module}}UseCase) Delete(
	ctx context.Context,
	input *Delete{{Module}}Input,
) (*Delete{{Module}}Output, error) {
	rowsAffected, err := u.{{module}}Repository.Delete(ctx, input.ID)
	if err != nil {
		logger.LogHandler(ctx, err)
		return &Delete{{Module}}Output{
			Body: Delete{{Module}}OutputBody{
				RowsAffected: 0,
			},
		}, err
	}
	return &Delete{{Module}}Output{
		Body: Delete{{Module}}OutputBody{
			RowsAffected: rowsAffected,
		},
	}, nil
}
